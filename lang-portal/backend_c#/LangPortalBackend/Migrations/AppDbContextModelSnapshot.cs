// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LangPortalBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("StudyActivities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudySessionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudySessionId");

                    b.ToTable("StudyActivities");
                });

            modelBuilder.Entity("StudySessions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudyActivityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("StudySessions");
                });

            modelBuilder.Entity("WordReviewItems", b =>
                {
                    b.Property<int>("WordId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudySessionId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Correct")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("WordId", "StudySessionId");

                    b.HasIndex("StudySessionId");

                    b.ToTable("WordReviewItems");
                });

            modelBuilder.Entity("Words", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Japanese")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Parts")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Romaji")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("WordsGroups", b =>
                {
                    b.Property<int>("WordId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("WordId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("WordsGroups");
                });

            modelBuilder.Entity("StudyActivities", b =>
                {
                    b.HasOne("Groups", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudySessions", "StudySession")
                        .WithMany()
                        .HasForeignKey("StudySessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("StudySession");
                });

            modelBuilder.Entity("StudySessions", b =>
                {
                    b.HasOne("Groups", "Group")
                        .WithMany("StudySessions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("WordReviewItems", b =>
                {
                    b.HasOne("StudySessions", "StudySession")
                        .WithMany("WordReviewItems")
                        .HasForeignKey("StudySessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Words", "Word")
                        .WithMany()
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudySession");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("WordsGroups", b =>
                {
                    b.HasOne("Groups", "Group")
                        .WithMany("WordsGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Words", "Word")
                        .WithMany("WordsGroups")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("Groups", b =>
                {
                    b.Navigation("StudySessions");

                    b.Navigation("WordsGroups");
                });

            modelBuilder.Entity("StudySessions", b =>
                {
                    b.Navigation("WordReviewItems");
                });

            modelBuilder.Entity("Words", b =>
                {
                    b.Navigation("WordsGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
